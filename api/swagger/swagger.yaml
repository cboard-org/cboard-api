swagger: "2.0"
info:
  description: "CBoard API provides backend functionality and persistence to the CBoard application"
  version: "0.0.1"
  title: CBoard API
  termsOfService: "http://cboard.io"
# during dev, should point to your local machine
# host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
     For accessing the API a valid JWT token must be passed in all the queries in
     the 'Authorization' header.  
     A valid JWT token is generated by the API and retourned as answer of a call
     to the route /login giving a valid user & password.
     The following syntax must be used in the 'Authorization' header :
         Bearer xxxxxx.yyyyyyy.zzzzzz

# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
parameters:
  LanguageParameter:
    in: query
    name: lang
    type: string
    default: ""
    description: Laguage option
  PageParameter:
    in: query
    name: page
    type: integer
    default: 1
    description: Page
  LimitParameter:
    in: query
    name: limit
    type: integer
    default: 0
    description: The numbers of items to return
  OffsetParameter:
    in: query
    name: offset
    type: integer
    default: 0
    description: The number of items to skip before starting to collect the result set
  SortParameter:
    in: query
    name: sort
    type: string
    default: "-_id"
    description: Sort by
  SearchParameter:
    in: query
    name: search
    type: string
    default: ""
    description: Search by
  Media:
    name: file
    in: formData
    type: file
    description: The files to upload.
    required: true
  User:
    name: user
    in: body
    description: User data for creating a new local user 
    required: true
    schema:
      $ref: "#/definitions/User" 
  Communicator:
    name: communicator
    in: body
    description: Communicator data for creating a new custom communicator
    required: true
    schema:
      $ref: "#/definitions/Communicator" 
  Settings:
    name: settings
    in: body
    description: Settings data for creating a new custom settings
    required: true
    schema:
      $ref: "#/definitions/Settings" 
  Board:
    name: board
    in: body
    description: Board data for creating a new custom board 
    required: true
    schema:
      $ref: "#/definitions/Board" 
  Translate:
    name: translate
    in: body
    description: Translate data 
    required: true
    schema:
      $ref: "#/definitions/Translate" 
paths:
  /swagger:
    x-swagger-pipe: swagger_raw
    
  /languages:
    x-swagger-router-controller: languages
    get:
      operationId: listLanguage
      description: Returns the full Language list.
      parameters:
        - $ref: "#/parameters/LanguageParameter"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetLanguageListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /languages/{lang}:
    x-swagger-router-controller: languages
    get:
      operationId: getLanguage
      description: Returns a specific language
      parameters:
        - name: lang
          type: string
          in: path
          required: true
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetLanguageResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user:
    x-swagger-router-controller: user
    post:
      operationId: createUser
      description: Create a new temporary user in database and send an email to validate the user.
      parameters:
        - $ref: '#/parameters/User'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TempUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      operationId: listUser
      description: Returns the full users list for the confirmed users.
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - $ref: "#/parameters/PageParameter"
        - $ref: "#/parameters/LimitParameter"
        - $ref: "#/parameters/OffsetParameter"
        - $ref: "#/parameters/SortParameter"
        - $ref: "#/parameters/SearchParameter"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/activate/{url}:
    x-swagger-router-controller: user
    post:
      operationId: activateUser
      description: Create a new user by copying it from temporary users and it removes the temporary user
      parameters:
        - in: path
          name: url
          description: Random generated key for user activation
          required: true
          type: string
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/UserActivatedResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/login:
    x-swagger-router-controller: user
    post:
      operationId: loginUser
      description: Returns a valid token for a user, that can be used for api authentication.
      parameters:
        - name: info
          description: User properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserLogin"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/logout:
    x-swagger-router-controller: user
    post:
      operationId: logoutUser
      description: Destroys user session and authentication token.
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: info
          description: User properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserLogin"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/LogoutResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /user/{id}:
    x-swagger-router-controller: user
    get:
      operationId: getUser
      description: Returns a specific user
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: id
          type: string
          in: path
          required: true
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: updateUser
      description: Updates a specific user
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: id
          description: User Id
          type: string
          in: path
          required: true
          minimum: 1
        - name: info
          description: User properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: removeUser
      description: Deletes a specific user
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - name: id
          description: User id
          type: string
          in: path
          required: true
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /me:
    x-swagger-router-controller: user
    get:
      operationId: getMe
      description: Returns logged user data
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetUserResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  
  /translate:
    x-swagger-router-controller: translate
    post:
      operationId: translate
      description: Translates an array of labels.
      parameters:
        - $ref: '#/parameters/Translate'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TranslateResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /settings:
    x-swagger-router-controller: settings
    post:
      operationId: updateSettings
      description: Creates or updates a user's settings object in database.
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - $ref: '#/parameters/Settings'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SettingsResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      operationId: getSettings
      description: Returns settings for current user
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SettingsResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /communicator:
    x-swagger-router-controller: communicator
    post:
      operationId: createCommunicator
      description: Creates a new communicator in database and send an email to notify the user.
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - $ref: '#/parameters/Communicator'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CommunicatorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      operationId: listCommunicators
      description: Returns the full communicators list.
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - $ref: "#/parameters/PageParameter"
        - $ref: "#/parameters/LimitParameter"
        - $ref: "#/parameters/OffsetParameter"
        - $ref: "#/parameters/SortParameter"
        - $ref: "#/parameters/SearchParameter"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetCommunicatorsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /communicator/{id}:
    x-swagger-router-controller: communicator
    get:
      operationId: getCommunicator
      description: Returns a specific communicator
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: id
          type: string
          in: path
          required: true
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetCommunicatorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: updateCommunicator
      description: Updates a specific communicator
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: id
          description: Communicator Id
          type: string
          in: path
          required: true
          minimum: 1
        - name: info
          description: Communicator properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Communicator"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetCommunicatorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: removeCommunicator
      description: Deletes a specific communicator
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - name: id
          description: Communicator id
          type: string
          in: path
          required: true
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetCommunicatorResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /communicator/byemail/{email}:
    x-swagger-router-controller: communicator
    get:
      operationId: getCommunicatorsEmail
      description: Returns communicators for a specific user email
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - $ref: "#/parameters/PageParameter"
        - $ref: "#/parameters/LimitParameter"
        - $ref: "#/parameters/OffsetParameter"
        - $ref: "#/parameters/SortParameter"
        - $ref: "#/parameters/SearchParameter"
        - name: email
          type: string
          in: path
          required: true
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetCommunicatorsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /media:
    x-swagger-router-controller: media
    post:
      operationId: uploadMedia
      description: Uploads media files and returns a set of urls.
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/Media'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MediaResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /board:
    x-swagger-router-controller: board
    post:
      operationId: createBoard
      description: Create a new board in database and send an email to notify the user.
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - $ref: '#/parameters/Board'
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/BoardResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      operationId: listBoard
      description: Returns the full boards list.
      parameters:
        - $ref: "#/parameters/PageParameter"
        - $ref: "#/parameters/LimitParameter"
        - $ref: "#/parameters/OffsetParameter"
        - $ref: "#/parameters/SortParameter"
        - $ref: "#/parameters/SearchParameter"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetBoardListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /board/{id}:
    x-swagger-router-controller: board
    get:
      operationId: getBoard
      description: Returns a specific board
      parameters:
        - name: id
          type: string
          in: path
          required: true
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetBoardResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      operationId: updateBoard
      description: Updates a specific board
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - name: id
          description: Board Id
          type: string
          in: path
          required: true
          minimum: 1
        - name: info
          description: Board properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Board"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetBoardResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      operationId: removeBoard
      description: Deletes a specific board
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      parameters:
        - name: id
          description: Board id
          type: string
          in: path
          required: true
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetBoardResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /board/byemail/{email}:
    x-swagger-router-controller: board
    get:
      operationId: getBoardsEmail
      description: Returns boards for a specific user email
      security:
        - Bearer: []
      x-security-scopes:
        - admin
        - user
      parameters:
        - $ref: "#/parameters/PageParameter"
        - $ref: "#/parameters/LimitParameter"
        - $ref: "#/parameters/OffsetParameter"
        - $ref: "#/parameters/SortParameter"
        - $ref: "#/parameters/SearchParameter"
        - name: email
          type: string
          in: path
          required: true
          minimum: 1
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetBoardListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
# complex objects have schema definitions
definitions:
  GetLanguageResponse:
    required:
        - locale
        - displayName
    properties:
        locale:
          type: string
        displayName:
          type: string
        skin:
          type: string
        hair:
          type: string
  GetLanguageListResponse:
    required:
      - total
      - page
      - limit
      - offset
      - sort
      - data
    properties:
      total:
        type: integer
      page:
        type: integer
      limit:
        type: integer
      offset:
        type: integer
      sort:
        type: string
      search:
        type: string
      data:
        type: array
        items:
          $ref: "#/definitions/Language"
  Language:
    type: object
    required:
      - displayName
      - locale
    properties:
      locale:
        type: string
        enum:  &APP_LANGS ['ar-SA','bn-BD','cs-CZ','da-DK','de-DE','el-GR','en-US','en-GB','es-ES','fi-FI','fr-FR','he-IL','hi-IN','hu-HU','id-ID','it-IT','ja-JP','km-KH','ko-KR','ne-NP','nl-NL','no-NO','pl-PL','pt-BR','pt-PT','ro-RO','ru-RU','si-LK','sk-SK','sv-SE','th-TH','tr-TR','uk-UA','vi-VN','zh-CN','zu-ZA']
      displayName:
        type: string
      skin:
        type: string
      hair:
        type: string
  User:
    type: object
    required:
      - id
      - name
      - email
      - password
    properties:
      id:
        type: string
      name:
        type: string
      email:
        type: string
      password:
        type: string
      birthdate:
          type: string
          format: date-time
      locale:
        type: string
        enum:  &APP_LANGS ['ar-SA','bn-BD','cs-CZ','da-DK','de-DE','el-GR','en-US','en-GB','es-ES','fi-FI','fr-FR','he-IL','hi-IN','hu-HU','id-ID','it-IT','ja-JP','km-KH','ko-KR','ne-NP','nl-NL','no-NO','pl-PL','pt-BR','pt-PT','ro-RO','ru-RU','si-LK','sk-SK','sv-SE','th-TH','tr-TR','uk-UA','vi-VN','zh-CN','zu-ZA']
  Translate:
      type: object
      required:
      - labels
      - from
      - to
      properties:
        labels:
          type: array
          items:
            type: string
        from:
          type: string
        to:
          type: string
  Settings:
    type: object
    required:
      - id
      - user
    properties:
      id:
        type: string
      language:
        type: object
      speech:
        type: object
      display:
        type: object
      scanning:
        type: object
      navigation:
        type: object
      user:
        type: string
  Communicator:
    type: object
    required:
      - id
      - name
      - email
      - author
      - rootBoard
      - boards
    properties:
      id:
        type: string
      name:
        type: string
      email:
        type: string
      author:
        type: string
      description:
        type: string
      rootBoard:
        type: string
      boards:
        type: array
        items:
          type: string
  Board:
    type: object
    required:
      - id
      - name
      - author
      - email
      - tiles
    properties:
      id:
        type: string
      name:
        type: string
      author:
        type: string
      email:
        type: string
      tiles:
        type: array
        items:
          type: object
      caption:
        type: string
      isPublic:
        type: boolean
      locale:
        type: string
        enum:  &APP_LANGS ['ar-SA','bn-BD','cs-CZ','da-DK','de-DE','el-GR','en-US','en-GB','es-ES','fi-FI','fr-FR','he-IL','hi-IN','hu-HU','id-ID','it-IT','ja-JP','km-KH','ko-KR','ne-NP','nl-NL','no-NO','pl-PL','pt-BR','pt-PT','ro-RO','ru-RU','si-LK','sk-SK','sv-SE','th-TH','tr-TR','uk-UA','vi-VN','zh-CN','zu-ZA']
  UserLogin:
      type: object
      required:
      - email
      - password
      properties:
        email:
          type: string
        password:
          type: string
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      message:
        type: string
        description: a short comment
    required:
      - success
      - message
  UserActivatedResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      userid:
        type: string
        description: the id for the activated user
      message:
        type: string
        description: a short comment
    required:
      - success
      - message
  TempUserResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      url:
        type: string
        description: generated verifying url
      message:
        type: string 
        description: a short comment
    required:
      - success
      - url
      - message
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  MediaResponse:
    required:
      - url
    properties:
      url:
        type: string
  GetUserListResponse:
    required:
      - total
      - page
      - limit
      - offset
      - sort
      - data
    properties:
      total:
        type: integer
      page:
        type: integer
      limit:
        type: integer
      offset:
        type: integer
      sort:
        type: string
      search:
        type: string
      data:
        type: array
        items:
          $ref: "#/definitions/User"
  GetUserResponse:
    required:
        - name
        - email
        - locale
    properties:
        name:
          type: string
        email:
          type: string
        locale:
          type: string
  LogoutResponse:
    required:
      - message
    properties:
      message:
        type: string
  GetBoardResponse:
    type: object
    properties:
      id:
        type: string
        description: Self-generated id for the board
      name:
        type: string
        description: Board name
      author:
        type: string
        description: Author of the board
      email:
        type: string
        description: Email of the author
      tiles:
        type: array
        items:
          type: object
        description: Generated board tiles
      caption:
        type: string
        description: Picture of the board
      isPublic:
        type: boolean
        description: Board is public or not
      locale:
        type: string
        description: Locale for the board
    required:
      - id
      - name
      - author
      - email
      - tiles
  SettingsResponse:
    type: object
    properties:
      id:
        type: string
        description: Self-generated id for the board
      language:
        type: object
        description: Settings for Language
      speech:
        type: object
        description: Settings for Speech
      display:
        type: object
        description: Settings for Display
      scanning:
        type: object
        description: Settings for Scanning
      navigation:
        type: object
        description: Settings for Navigation
      user:
        type: string
        description: User's id
    required:
      - id
      - user
  CommunicatorResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      id:
        type: string
        description: self-generated id for the communicator
      communicator:
        type: object
        description: generated communicator data
      message:
        type: string
        description: a short comment
    required:
      - success
      - id
      - communicator
      - message
  GetCommunicatorResponse:
    required:
      - id
      - name
      - email
      - author
      - rootBoard
      - boards
    properties:
      id:
        type: string
      name:
        type: string
      email:
        type: string
      author:
        type: string
      description:
        type: string
      rootBoard:
        type: string
      boards:
        type: array
        items:
          type: string
  GetCommunicatorsListResponse:
    required:
      - total
      - page
      - limit
      - offset
      - sort
      - data
    properties:
      total:
        type: integer
      page:
        type: integer
      limit:
        type: integer
      offset:
        type: integer
      sort:
        type: string
      search:
        type: string
      data:
        type: array
        items:
          $ref: "#/definitions/Communicator"
  BoardResponse:
    type: object
    properties:
      id:
        type: string
        description: Self-generated id for the board
      name:
        type: string
        description: Board name
      author:
        type: string
        description: Author of the board
      email:
        type: string
        description: Email of the author
      tiles:
        type: array
        items:
          type: object
        description: Generated board tiles
      isPublic:
        type: boolean
        description: Board is public or not
      caption:
        type: string
        description: Picture of the board
      locale:
        type: string
        description: Locale for the board
    required:
      - id
      - name
      - author
      - email
      - tiles
  TranslateResponse:
    type: object
  GetBoardListResponse:
    required:
      - total
      - page
      - limit
      - offset
      - sort
      - data
    properties:
      total:
        type: integer
      page:
        type: integer
      limit:
        type: integer
      offset:
        type: integer
      sort:
        type: string
      search:
        type: string
      data:
        type: array
        items:
          $ref: "#/definitions/Board"
