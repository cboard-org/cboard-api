{
	"info": {
		"_postman_id": "6fba04ce-86d5-491b-b3cf-24decde495c8",
		"name": "cboard-api",
		"description": "contains tests for all cboard-api calls",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/user/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body match+es string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"An email has been sent to you. Please check it to verify your account\");",
							"});",
							"pm.globals.set(\"activation_url\",pm.response.json().url);",
							"console.log(pm.globals.get(\"activation_url\"));"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"email_key = Math.random().toString(36).substring(7);",
							"",
							"pm.globals.set(\"email\", email_key + \"@cboard.io\");",
							"",
							"pm.globals.set(\"username\", email_key );",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Origin",
						"value": "http://localhost:3000",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"martin\",\n    \"email\": \"{{email}}\",\n    \"password\": \"123456\"\n}"
				},
				"url": {
					"raw": "{{url}}/user",
					"host": [
						"{{url}}"
					],
					"path": [
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user/activate/{activation_url}",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"CONFIRMED!\");",
							"});",
							"",
							"pm.globals.set(\"userid\",pm.response.json().userid);",
							"console.log(pm.globals.get(\"userid\"));"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/user/activate/{{activation_url}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"activate",
						"{{activation_url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user/login/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"",
							"pm.globals.set(\"token\",pm.response.json().authToken);",
							"console.log(pm.globals.get(\"token\"));",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"123456\"\n}"
				},
				"url": {
					"raw": "{{url}}/user/login/",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/user/{id} not Authorized",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{url}}/user/{{userid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"{{userid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user/",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{url}}/user/",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/user/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{url}}/user/{{userid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"{{userid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"titin\",\n    \"locale\": \"es-ES\"\n}"
				},
				"url": {
					"raw": "{{url}}/user/{{userid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"{{userid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/languages/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check languages\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(Object.keys(jsonData.data).length).to.eql(10);",
							"});",
							"pm.test(\"Check total\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.total).to.eql(40);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{url}}/languages/",
					"host": [
						"{{url}}"
					],
					"path": [
						"languages",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/languages/?locale=en-US",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Check language\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.locale).to.eql(\"en-US\");",
							"    pm.expect(jsonData.displayName).to.eql(\"English\");",
							"    pm.expect(jsonData.skin).to.eql(\"white\");",
							"    pm.expect(jsonData.hair).to.eql(\"brown\");",
							"    pm.expect(jsonData.arabic).to.eql(false);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{url}}/languages/en-US",
					"host": [
						"{{url}}"
					],
					"path": [
						"languages",
						"en-US"
					]
				}
			},
			"response": []
		},
		{
			"name": "/languages/?locale=es-Es",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Check language\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.locale).to.eql(\"es-ES\");",
							"    pm.expect(jsonData.displayName).to.eql(\"Spanish (Spain)\");",
							"    pm.expect(jsonData.skin).to.eql(\"white\");",
							"    pm.expect(jsonData.hair).to.eql(\"brown\");",
							"    pm.expect(jsonData.arabic).to.eql(false);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{url}}/languages/es-Es",
					"host": [
						"{{url}}"
					],
					"path": [
						"languages",
						"es-Es"
					]
				}
			},
			"response": []
		},
		{
			"name": "/languages/?locale=cs-CZ",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Check language\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.locale).to.eql(\"cs-CZ\");",
							"    pm.expect(jsonData.displayName).to.eql(\"Czech (Czechia)\");",
							"    pm.expect(jsonData.skin).to.eql(\"white\");",
							"    pm.expect(jsonData.hair).to.eql(\"blonde\");",
							"    pm.expect(jsonData.arabic).to.eql(false);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{url}}/languages/cs-CZ",
					"host": [
						"{{url}}"
					],
					"path": [
						"languages",
						"cs-CZ"
					]
				}
			},
			"response": []
		},
		{
			"name": "/board/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.globals.set(\"boardid\",pm.response.json().id);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"board_key = Math.random().toString(36).substring(7);",
							"pm.globals.set(\"board_name\", \"test_board_\" + board_key);",
							"",
							"pm.environment.unset(\"variable_key\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{board_name}}\",\n    \"author\": \"Postman Test\",\n    \"email\": \"{{email}}\",\n    \"format\":  \"obf\",\n    \"tiles\": [\n    \t{}\n    \t],\n  \"caption\": \"string\",\n  \"isPublic\": true,\n  \"locale\": \"ar-SA\"\n}"
				},
				"url": {
					"raw": "{{url}}/board/",
					"host": [
						"{{url}}"
					],
					"path": [
						"board",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/board/ Empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.globals.set(\"boardid\",pm.response.json().id);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"board_key = Math.random().toString(36).substring(7);",
							"pm.globals.set(\"board_name\", \"test_board_\" + board_key);",
							"",
							"pm.environment.unset(\"variable_key\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Empty board\",\n    \"author\": \"Postman Test\",\n    \"email\": \"{{email}}\",\n    \"format\":  \"cboard\",\n  \"caption\": \"string\",\n  \"isPublic\": true,\n  \"locale\": \"ar-SA\"\n}"
				},
				"url": {
					"raw": "{{url}}/board/",
					"host": [
						"{{url}}"
					],
					"path": [
						"board",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/board/",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{url}}/board/",
					"host": [
						"{{url}}"
					],
					"path": [
						"board",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/board/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"titin\",\n    \"locale\": \"es-ES\"\n}"
				},
				"url": {
					"raw": "{{url}}/board/{{boardid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"board",
						"{{boardid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/board/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{url}}/board/{{boardid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"board",
						"{{boardid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/board/byemail/{email}",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{url}}/board/byemail/{{email}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"board",
						"byemail",
						"{{email}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/board/public",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{url}}/board/public",
					"host": [
						"{{url}}"
					],
					"path": [
						"board",
						"public"
					]
				}
			},
			"response": []
		},
		{
			"name": "/board/report/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"board_key = Math.random().toString(36).substring(7);",
							"pm.globals.set(\"board_name\", \"test_board_\" + board_key);",
							"",
							"pm.environment.unset(\"variable_key\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{board_name}}\",\n    \"author\": \"Postman Test\",\n    \"email\": \"{{email}}\", \n  \"description\": \"this is a description\",\n  \"id\": \"123456\",\n  \"url\": \"https://cboard.io/888888\",\n  \"reason\": \"soffensive content\",\n  \"whistleblower\": {\n    \"name\": \"string\",\n    \"email\": \"string\",\n    \"language\": \"string\"\n  }\n}"
				},
				"url": {
					"raw": "{{url}}/board/report",
					"host": [
						"{{url}}"
					],
					"path": [
						"board",
						"report"
					]
				}
			},
			"response": []
		},
		{
			"name": "/board/{id}",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{url}}/board/{{boardid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"board",
						"{{boardid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/board/{id} 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					}
				],
				"url": {
					"raw": "{{url}}/board/{{boardid}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"board",
						"{{boardid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "/settings/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"language\":{\"lang\":\"es-ES\"},\n\t\"display\":{\"uiSize\":\"Standard\",\"fontSize\":\"Standard\",\"hideOutputActive\":false,\"labelPosition\":\"Below\",\"darkThemeActive\":false},\n\t\"speech\":{\"voiceURI\":\"Microsoft Sabina Desktop - Spanish (Mexico)\",\"pitch\":1,\"rate\":1},\n\t\"scanning\":{\"active\":false,\"delay\":2000,\"strategy\":\"automatic\"},\n\t\"navigation\":{\"active\":false,\"caBackButtonActive\":false,\"quickUnlockActive\":false,\"removeOutputActive\":true}\n}"
				},
				"url": {
					"raw": "{{url}}/settings/",
					"host": [
						"{{url}}"
					],
					"path": [
						"settings",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/settings/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Check response\", function () {",
							"    var jsonData = pm.response.json();",
							"    var edisplay = {",
							"        \"uiSize\": \"Standard\",",
							"        \"fontSize\": \"Standard\",",
							"        \"hideOutputActive\": false,",
							"        \"labelPosition\": \"Below\",",
							"        \"darkThemeActive\": false",
							"    };",
							"    pm.expect(jsonData.display).to.eql(edisplay);",
							"    var elanguage = {",
							"        \"lang\": \"es-ES\"",
							"    };",
							"    pm.expect(jsonData.language).to.eql(elanguage);",
							"    var enavigation = {",
							"        \"active\": false,",
							"        \"caBackButtonActive\": false,",
							"        \"quickUnlockActive\": false,",
							"        \"removeOutputActive\": true",
							"    };",
							"    pm.expect(jsonData.navigation).to.eql(enavigation);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/settings/",
					"host": [
						"{{url}}"
					],
					"path": [
						"settings",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/user/forgot/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.globals.set(\"reset_url\",pm.response.json().url);",
							"console.log(pm.globals.get(\"reset_url\"));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{email}}\"\n}"
				},
				"url": {
					"raw": "{{url}}/user/forgot/",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"forgot",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/user/store-password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"userid\": \"{{userid}}\",\n    \"password\": \"1234578\",\n    \"token\": \"{{reset_url}}\"\n}"
				},
				"url": {
					"raw": "{{url}}/user/store-password/",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"store-password",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/user/login/ 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"",
							"pm.globals.set(\"token\",pm.response.json().authToken);",
							"console.log(pm.globals.get(\"token\"));",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"1234578\"\n}"
				},
				"url": {
					"raw": "{{url}}/user/login/",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/user/login/ 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"",
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"123456\"\n}"
				},
				"url": {
					"raw": "{{url}}/user/login/",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"login",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/analytics/batchGet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Check report response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.reports).to.be.a('array');",
							"    pm.expect(jsonData.reports).to.have.lengthOf(2);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"clientId\": \"1635071876.1577121026\",\n        \"dimension\": \"date\",\n        \"startDate\": \"7daysago\",\n        \"endDate\": \"today\",\n        \"metric\": \"totalEvents\",\n        \"filter\": {\n            \"name\": \"eventAction\",\n            \"value\": \"Click Symbol\"\n        }\n    },\n    {\n        \"clientId\": \"1635071876.1577121026\",\n        \"startDate\": \"7daysago\",\n        \"endDate\": \"today\",\n        \"metric\": \"totalEvents\",\n        \"dimension\": \"date\",\n        \"filter\": {\n            \"name\": \"eventAction\",\n            \"value\": \"Click Symbol\"\n        }\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/analytics/batchGet",
					"host": [
						"{{url}}"
					],
					"path": [
						"analytics",
						"batchGet"
					]
				}
			},
			"response": []
		},
		{
			"name": "/analytics/batchGet unauthorized",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"pm.test(\"Check error response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql('Not valid token');",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"clientId\": \"1635071876.1577121026\",\n        \"dimension\": \"date\",\n        \"startDate\": \"7daysago\",\n        \"endDate\": \"today\",\n        \"metric\": \"totalEvents\",\n        \"filter\": {\n            \"name\": \"eventAction\",\n            \"value\": \"Click Symbol\"\n        }\n    },\n    {\n        \"clientId\": \"1635071876.1577121026\",\n        \"startDate\": \"7daysago\",\n        \"endDate\": \"today\",\n        \"metric\": \"totalEvents\",\n        \"dimension\": \"date\",\n        \"filter\": {\n            \"name\": \"eventAction\",\n            \"value\": \"Click Symbol\"\n        }\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/analytics/batchGet",
					"host": [
						"{{url}}"
					],
					"path": [
						"analytics",
						"batchGet"
					]
				}
			},
			"response": []
		},
		{
			"name": "/analytics/batchGet no dimension",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 409\", function () {",
							"    pm.response.to.have.status(409);",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Unknown dimension\");",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"clientId\": \"1635071876.1577121026\",\n        \"startDate\": \"7daysago\",\n        \"endDate\": \"today\",\n        \"metric\": \"avgSessionDuration\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/analytics/batchGet",
					"host": [
						"{{url}}"
					],
					"path": [
						"analytics",
						"batchGet"
					]
				}
			},
			"response": []
		},
		{
			"name": "/analytics/batchGet dimension days",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Check report response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.reports).to.be.a('array');",
							"    pm.expect(jsonData.reports).to.have.lengthOf(1);",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "Bearer {{token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"clientId\": \"1635071876.1577121026\",\n        \"startDate\": \"17daysago\",\n        \"endDate\": \"today\",\n        \"metric\": \"avgSessionDuration\",\n        \"dimension\": \"day\"\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/analytics/batchGet",
					"host": [
						"{{url}}"
					],
					"path": [
						"analytics",
						"batchGet"
					]
				}
			},
			"response": []
		},
		{
			"name": "/user/logout/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"",
							"pm.globals.set(\"token\",pm.response.json().authToken);",
							"console.log(pm.globals.get(\"token\"));",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"123456\"\n}"
				},
				"url": {
					"raw": "{{url}}/user/logout/",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"logout",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/location",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.sendRequest({\r",
							"    url: 'https://api64.ipify.org?format=json',\r",
							"    method: 'GET'\r",
							"}, function (err, res) {\r",
							"    if (err === null) {\r",
							"        pm.environment.set(\"publicIp\", res.json().ip);\r",
							"    }\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "X-Forwarded-For",
						"value": "{{publicIp}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/location",
					"host": [
						"{{url}}"
					],
					"path": [
						"location"
					]
				}
			},
			"response": []
		}
	]
}