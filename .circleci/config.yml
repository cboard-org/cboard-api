version: 2

jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:12
      - image: circleci/mongo:4.0
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      # Install and save node_modules to cache
      - run:
          name: Install dependencias 
          command: |
            yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Decrypt the Google auth file 
          command: |
            openssl aes-256-cbc -d -md sha256 \
            -in  google-auth.json.cipher \
            -out google-auth.json \
            -k $KEY
      # run tests
      - run: 
          name: Run Unitests
          command: MOCHA_FILE=~/junit/test-results.xml ./node_modules/.bin/mocha test --recursive --reporter mocha-junit-reporter --exit
          when: always
      - store_test_results:
          path: ~/junit
      - store_artifacts:
          path: ~/junit
  image:
    docker:
      # specify the version you desire here
      - image: circleci/node:12
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      # Install and save node_modules to cache
      - run: yarn install --cache-folder ~/.cache/yarn
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      # Build Docker Image
      # https://circleci.com/docs/2.0/building-docker-images/#overview
      - setup_remote_docker:   # (2)
          docker_layer_caching: false  # (3)
      - run: |
          openssl aes-256-cbc -d -md sha256 \
              -in  google-auth.json.cipher \
              -out google-auth.json \
              -k $KEY
      # build and push Docker image
      - run: |
          TAG=0.1.$CIRCLE_BUILD_NUM
          docker build -t cboard/cboard-api:$TAG -t cboard/cboard-api:latest .
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push cboard/cboard-api:latest
          docker push cboard/cboard-api:$TAG
  deploy:
    machine: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - "70:3a:28:02:d9:74:fd:be:c8:79:f6:2e:9b:f7:21:04"
      - run: |
          ssh -t $SSH_USERNAME@$SSH_SERVER 'bash -ic "docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            cboard/cboard-bootstrap \
            pull && \
            docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -e URL \
            -e SUBDOMAINS \
            -e VALIDATION \
            -e EMAIL \
            -e ONLY_SUBDOMAINS=true \
            -e PUID=”$(id -u $USER)” \
            -e PGID=”$(id -g $USER)” \
            -e AZURE_STORAGE_CONNECTION_STRING \
            -e SENDGRID_API_KEY \
            -e JWT_SECRET \
            -e FACEBOOK_APP_ID \
            -e FACEBOOK_APP_SECRET \
            -e FACEBOOK_CALLBACK_URL \
            -e GOOGLE_APP_ID \
            -e GOOGLE_APP_SECRET \
            -e GOOGLE_CALLBACK_URL \
            cboard/cboard-bootstrap \
            up -d --no-deps cboard-api" && exit'
workflows:
  version: 2
  build_test_image:
    jobs:
      - build:
          context: google-auth
      - image:
          context: google-auth
          requires:
            - build
          filters:
            branches:
              only: master
